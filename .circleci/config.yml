version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
    # Android the primary container
    - image: circleci/android:api-27
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#    - run:
#        name: Build debug APK and release APK
#        command: |
#          ./gradlew :app:assembleDebug
#          ./gradlew :app:assembleDebugAndroidTest
    - run:
        name: Store Google Service Account
        command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - run:
        name: Authorize gcloud and set config defaults
        command: |
          sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
    - run:
        name: Test with Firebase Test Lab
        command: |
          sudo gcloud firebase test android run \
            --type instrumentation \
            --app app/build/outputs/apk/debug/app-debug.apk \
            --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
            --device model=Nexus6,version=21,locale=en,orientation=portrait  \
    - run:
       name: Install gsutil dependency and copy test results data
       command: |
          sudo pip install -U crcmod
          mkdir results
          sudo gsutil -m cp -r -U gs://`egrep -o 'test-lab-[^]]+' fire.log` results | true
          when: always
    - store_artifacts:
       path: results
       destination: results
    - store_test_results:
       path: results

#    - run:
#        name: Setup emulator
#        command: sdkmanager "system-images;android-24;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-24;default;armeabi-v7a"
#    - run:
#        name: Launch emulator
#        command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel auto -verbose
#        background: true
#    - run:
#        name: Wait emulator
#        command: |
#          # wait for it to have booted
#          # circle-android wait-for-boot
#          # unlock the emulator screen
#          sleep 30
#          adb shell input keyevent 82
#    - run:
#        name: Run Android Connected Tests
#        command: |
#          export ADB_INSTALL_TIMEOUT=120
#          export ANDROID_HOME=$ANDROID_SDK_ROOT
#          # ./scripts/test.sh
#          ./gradlew assembleDebug
#          # Wait for emulator to fully boot
#          # TODO: Need to create a good check
#          sleep 60
#          # Is the emulator still running?
#          adb devices
#          # Check if package manager is running
#          adb shell pm list packages
#          # Install package
#          $ANDROID_SDK_ROOT/platform-tools/adb install /home/android/androidlearn/app/build/outputs/apk/app-debug.apk
#          ./gradlew connectedAndroidTest
#    - run:
#        name: Run EspressoTests
#        command: ./gradlew connectedAndroidTest -PdisablePreDex
#    - store_artifacts:
#        path: app/build/reports
#        destination: reports
#    - store_test_results:
#        path: app/build/test-results